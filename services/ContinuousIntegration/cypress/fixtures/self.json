{
  "containers": [
    {
      "id": "assets",
      "image": "base",
      "steps": [
        "yarn --cwd services/ContinuousIntegration --immutable",
        "yarn --cwd services/ContinuousIntegration build"
      ],
      "uploads": [
        "/repo/services/ContinuousIntegration/assets/output"
      ]
    },
    {
      "id": "main",
      "image": "base",
      "steps": [
        "cp -a /neededFiles/output services/ContinuousIntegration/assets/output",
        "go build -C services/ContinuousIntegration"
      ],
      "neededFiles": [
        "assets:/repo/services/ContinuousIntegration/assets/output"
      ],
      "needs": [
        "assets"
      ],
      "uploads": [
        "/repo/services/ContinuousIntegration/ContinuousIntegration"
      ]
    },
    {
      "id": "registry",
      "image": "base",
      "steps": [
        "go build -C services/registry"
      ],
      "uploads": [
        "/repo/services/registry/registry"
      ]
    },
    {
      "id": "proxy",
      "image": "base",
      "steps": [
        "go build -C services/proxy"
      ],
      "uploads": [
        "/repo/services/proxy/proxy"
      ]
    },
    {
      "id": "test",
      "image": "base",
      "steps": [
        "cp /neededFiles/* services/ContinuousIntegration/",
        "(dockerd > dockerlog.txt 2>&1 &)",
        "yarn --cwd services/ContinuousIntegration --immutable",
        "docker run -d -p 3000:3000 pascalgn/git-server-docker",
        "sleep 5",
        "git remote add test http://localhost:3000/repository.git",
        "git push test HEAD:refs/heads/master --force",
        "docker buildx create --driver docker-container --name mybuilder --use --bootstrap",
        "docker cp /usr/local/share/ca-certificates/registry.crt buildx_buildkit_mybuilder0:/usr/local/share/ca-certificates/registry.crt",
        "docker exec buildx_buildkit_mybuilder0 update-ca-certificates",
        "docker login --username=$DOCKER_USER --password=$DOCKER_PASS $REGISTRY",
        "docker buildx build --tag base --cache-to=type=registry,ref=$REGISTRY/alex/base:CI,mode=max --cache-from=type=registry,ref=$REGISTRY/alex/base:CI --load images/base",
        "docker pull redis",
        "echo yarn --cwd services/ContinuousIntegration conc --kill-others --names \"proxy,server,cypress\" --success \"command-cypress\" \"./proxy\" \"./ContinuousIntegration\" \"yarn cypress run --env host=http://$(ip a s eth0 | grep -oP '(?<=inet\\s)\\d+(\\.\\d+){3}'):3000\"",
        "yarn --cwd services/ContinuousIntegration conc --kill-others --names \"proxy,server,cypress\" --success \"command-cypress\" \"./proxy\" \"./ContinuousIntegration\" \"yarn cypress run --env host=http://$(ip a s eth0 | grep -oP '(?<=inet\\s)\\d+(\\.\\d+){3}'):3000\"",
        "docker tag base $REGISTRY/alex/base",
        "docker push $REGISTRY/alex/base"
      ],
      "environment": {
        "DOMAIN": "localhost",
        "JWT_SECRET": "development",
        "DOCKER_HOST": "unix:///var/run/docker.sock",
        "DATABASE_URL": "postgres://development:development@db:5432/development?sslmode=disable",
        "REDIS_URL": "redis://redis:6379",
        "RUNTIME": "runc",
        "REGISTRY_URL": "1.1.1.1",
        "ADDRESS": ":http",
        "MAIN_HOST": "localhost:8080",
        "PERSIST_HOST": "localhost"
      },
      "needs": [
        "main",
        "registry",
        "proxy"
      ],
      "neededFiles": [
        "main:/repo/services/ContinuousIntegration/ContinuousIntegration",
        "proxy:/repo/services/proxy/proxy"
      ],
      "services": {
        "db": {
          "image": "postgres",
          "healthcheck": "pg_isready",
          "environment": {
            "POSTGRES_PASSWORD": "development",
            "POSTGRES_USER": "development",
            "POSTGRES_DB": "development"
          }
        },
        "redis": {
          "image": "redis",
          "healthcheck": "redis-cli ping"
        }
      }
    }
  ]
}