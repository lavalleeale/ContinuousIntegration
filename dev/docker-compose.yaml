# Use postgres/example user/password credentials
version: "3.1"

services:
  minio:
    ports:
      - 9000:9000
      - 9001:9001
    container_name: minio
    volumes:
      - ./minio-data:/data
    environment:
      - MINIO_ROOT_USER=development
      - MINIO_ROOT_PASSWORD=development
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
  redis:
    ports:
      - 6379:6379
    image: redis
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: development
      POSTGRES_USER: development
      POSTGRES_DB: development
    ports:
      - 5432:5432
    volumes:
      - "db:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  registry:
    image: alex95712/registry
    volumes:
      - "./CA.pem:/certs/root.crt"
      - "./registry-config.yml:/etc/docker/registry/config.yml"
      - "registry:/var/lib/registry"
  registry_auth:
    build:
      context: ..
      dockerfile: Dockerfile.registry
    ports:
      - 443:443
    environment:
      DATABASE_URL: postgres://development:development@db:5432/development?sslmode=disable
      JWT_SECRET: development
      HOST: registry.dev.lan
      DIRECTORY_URL: https://step.lan/acme/ACME/directory
      ADDRESS: ":https"
      REGISTRY_ADDRESS: "http://registry"
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - auth
  continuous_integration:
    build:
      context: ..
      dockerfile: Dockerfile.ContinuousIntegration
    ports:
      - 8080:8080
    environment:
      DOMAIN: localhost
      JWT_SECRET: development
      DOCKER_HOST: unix:///var/run/docker.sock
      DATABASE_URL: postgres://development:development@db:5432/development?sslmode=disable
      REDIS_URL: redis://redis:6379
      RUNTIME: sysbox-runc
      REGISTRY_URL: registry.dev.lan
      PERSIST_HOST: localhost
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - ci
  proxy:
    build:
      context: ../services/proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      - ADDRESS=:http
      - MAIN_HOST=continuous_integration:8080
      - PROXY_HOST=10.0.1.18
      - REDIS_URL=redis://redis:6379
    profiles:
      - proxy
  gitea:
    image: pascalgn/git-server-docker
    ports:
      - "3000:3000"
volumes:
  registry:
  db:
