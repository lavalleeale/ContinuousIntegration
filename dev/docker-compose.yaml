# Use postgres/example user/password credentials
version: "3.1"

services:
  redis:
    ports:
      - 6379:6379
    image: redis
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: development
      POSTGRES_USER: development
      POSTGRES_DB: development
    ports:
      - 5432:5432
    volumes:
      - "db:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  registry:
    image: alex95712/registry
    ports:
      - 10.0.2.1:443:5000
    volumes:
      - "./CA.pem:/certs/root.crt"
      - "./registry-config.yml:/etc/docker/registry/config.yml"
      - "registry:/var/lib/registry"
  registry_auth:
    build:
      context: ..
      dockerfile: Dockerfile.registry
    ports:
      - 10.0.2.2:443:443
    environment:
      DATABASE_URL: postgres://development:development@db:5432/development?sslmode=disable
      JWT_SECRET: development
      HOST: auth.dev.lan
      DIRECTORY_URL: https://step.lan/acme/ACME/directory
      ADDRESS: ":https"
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - auth
  continuous_integration:
    build:
      context: ..
      dockerfile: Dockerfile.ContinuousIntegration
    ports:
      - 8080:8080
    environment:
      DOMAIN: localhost
      JWT_SECRET: development
      DOCKER_HOST: unix:///var/run/docker.sock
      DATABASE_URL: postgres://development:development@db:5432/development?sslmode=disable
      REDIS_URL: redis://redis:6379
      RUNTIME: sysbox-runc
      REGISTRY_URL: registry.dev.lan
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - ci
  gitea:
    image: gitea/gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:22"
volumes:
  registry:
  db:
