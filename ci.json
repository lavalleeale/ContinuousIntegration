[
  {
    "id": "assets",
    "image": "base",
    "steps": [
      "yarn --cwd services/ContinuousIntegration --immutable",
      "yarn --cwd services/ContinuousIntegration build"
    ],
    "uploads": [
      "/repo/services/ContinuousIntegration/assets/output"
    ]
  },
  {
    "id": "main",
    "image": "base",
    "steps": [
      "cp -a /neededFiles/output services/ContinuousIntegration/assets/output",
      "go build -C services/ContinuousIntegration"
    ],
    "neededFiles": [
      "assets:/repo/services/ContinuousIntegration/assets/output"
    ],
    "needs": [
      "assets"
    ],
    "uploads": [
      "/repo/services/ContinuousIntegration/ContinuousIntegration"
    ]
  },
  {
    "id": "registry",
    "image": "base",
    "steps": [
      "(dockerd > dockerlog.txt 2>&1 &) && sleep 5",
      "docker buildx create --driver docker-container --name mybuilder --use --bootstrap",
      "docker cp /usr/local/share/ca-certificates/registry.crt buildx_buildkit_mybuilder0:/usr/local/share/ca-certificates/registry.crt",
      "docker exec buildx_buildkit_mybuilder0 update-ca-certificates",
      "docker login --username=$DOCKER_USER --password=$DOCKER_PASS $REGISTRY",
      "cp /usr/local/share/ca-certificates/registry.crt root_ca.crt",
      "docker buildx build --tag $REGISTRY/alex/registry --cache-to=type=registry,ref=$REGISTRY/alex/registry:CI,mode=max --cache-from=type=registry,ref=$REGISTRY/alex/registry:CI --push . -f Dockerfile.registry"
    ]
  },
  {
    "id": "test",
    "image": "base",
    "steps": [
      "cp /neededFiles/ContinuousIntegration services/ContinuousIntegration/ContinuousIntegration",
      "(dockerd > dockerlog.txt 2>&1 &)",
      "yarn --cwd services/ContinuousIntegration --immutable",
      "docker buildx create --driver docker-container --name mybuilder --use --bootstrap",
      "docker cp /usr/local/share/ca-certificates/registry.crt buildx_buildkit_mybuilder0:/usr/local/share/ca-certificates/registry.crt",
      "docker exec buildx_buildkit_mybuilder0 update-ca-certificates",
      "docker login --username=$DOCKER_USER --password=$DOCKER_PASS $REGISTRY",
      "docker buildx build --tag base --cache-to=type=registry,ref=$REGISTRY/alex/base:CI,mode=max --cache-from=type=registry,ref=$REGISTRY/alex/base:CI --load images/base",
      "yarn --cwd services/ContinuousIntegration conc --kill-others --names \"server,cypress\" --success \"command-cypress\" \"./ContinuousIntegration\" \"yarn cypress run -s cypress/e2e/basic.cy.ts\"",
      "docker tag base $REGISTRY/alex/base",
      "docker push $REGISTRY/alex/base"
    ],
    "environment": {
      "DOMAIN": "localhost",
      "JWT_SECRET": "development",
      "DOCKER_HOST": "unix:///var/run/docker.sock",
      "DATABASE_URL": "postgres://development:development@db:5432/development?sslmode=disable",
      "REDIS_URL": "redis://redis:6379",
      "RUNTIME": "runc",
      "REGISTRY_URL": "1.1.1.1"
    },
    "needs": [
      "main",
      "registry"
    ],
    "neededFiles": [
      "main:/repo/services/ContinuousIntegration/ContinuousIntegration"
    ],
    "services": {
      "db": {
        "image": "postgres",
        "healthcheck": "pg_isready",
        "environment": {
          "POSTGRES_PASSWORD": "development",
          "POSTGRES_USER": "development",
          "POSTGRES_DB": "development"
        }
      },
      "redis": {
        "image": "redis",
        "healthcheck": "redis-cli ping"
      }
    }
  }
]